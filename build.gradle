buildscript {
    repositories {
        maven { url = "https://maven.parchmentmc.org/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+', changing: true
    }
}

plugins {
    id "io.freefair.lombok" version "6.5.0.3"
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.parchmentmc.librarian.forgegradle'

version = "${mod_version}-${mod_phase}-${mc_version}"
group = 'gloridifice.watersource' 
archivesBaseName = 'watersource'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'parchment', version: "2022.11.06-1.18.2"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "ModMaven"
        url = "https://modmaven.dev"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.85'

    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

}
minecraft {
    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
        }
    }
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "Water Source",
                "Specification-Vendor"    : "Lemon Slice Studio",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "1",
                "Implementation-Vendor"   : "Lemon Slice Studio",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

